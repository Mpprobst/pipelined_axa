{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww12320\viewh11740\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
l16	$r10, 0	; r10 keeps track of number of successes\
l16	$r1, 0       \
xhi	$r1, 1		; r1 = 256\
l16	$r2, 256\
sub	$r2, $r1\
bz	$r2, 2		; will go to next test if true\
fail	0\
\
l16	$0, 0\
l16	$11, 0\
l16	$12, 20\
ex	$11, @$0\
xor	$11, $12\
bz	$9, 2\
fail	0\
\
add	$r3, 1\
add 	$r1, 6\
add	$r2, 6\
sub	$r2, $r1	; a WAW dependency\
jz	$r2, $r3	; if zero jump to instruction 1 second pass will not be 0\
sub	$r1, 6		; if r2 is not 0 then r1 = 0\
bz	$r1, 2		; will go to next test if true\
fail	0\
\
l16 	$r1, 256\
l16 	$2, 8\
rol 	$r1, $2	; WAR dependency\
sub 	$r1, $r2	; result is 0 if rol is correct and dependency is handled\
bz	$r1, 2\
fail 0\
}